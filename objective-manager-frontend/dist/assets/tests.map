{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","objective-manager-frontend/tests/acceptance/application-test.js","objective-manager-frontend/tests/factories/objective.js","objective-manager-frontend/tests/integration/components/add-button-test.js","objective-manager-frontend/tests/test-helper.js","objective-manager-frontend/tests/unit/adapters/application-test.js","objective-manager-frontend/tests/unit/controllers/application-test.js","objective-manager-frontend/tests/unit/routes/application-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"objective-manager-frontend/tests/acceptance/application-test\", [\"qunit\", \"@ember/test-helpers\", \"ember-qunit\", \"ember-data-factory-guy\"], function (_qunit, _testHelpers, _emberQunit, _emberDataFactoryGuy) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"ember-qunit\",0,\"ember-data-factory-guy\"eaimeta@70e063a35619d71f\n\n  (0, _qunit.module)('Acceptance | application', function (hooks) {\n    (0, _emberQunit.setupApplicationTest)(hooks);\n    hooks.beforeEach(function () {\n      (0, _emberDataFactoryGuy.mockFindAll)('objective', 1);\n    });\n    (0, _qunit.test)('visit main page', async function (assert) {\n      await (0, _testHelpers.visit)('/');\n      assert.equal((0, _testHelpers.currentURL)(), '/');\n      assert.dom('js-objective-title').hasText('First objective');\n      assert.dom('js-objective-weight').hasText('50');\n    });\n    (0, _qunit.test)('can create new objectives', async function (assert) {\n      await (0, _testHelpers.visit)('/');\n      const addObjectiveButton = '.js-add-objective-button';\n      assert.dom(addObjectiveButton).exists({\n        count: 1\n      });\n      await click(addObjectiveButton);\n      (0, _emberDataFactoryGuy.mockCreate)('objective').match({\n        title: 'Undefined objective',\n        weight: 0\n      }).returns({\n        attrs: {\n          id: 66,\n          title: 'Undefined objective',\n          weight: 0\n        }\n      });\n      (0, _emberDataFactoryGuy.mockReload)('objective', 66);\n    });\n  });\n});","define(\"objective-manager-frontend/tests/factories/objective\", [\"ember-data-factory-guy\"], function (_emberDataFactoryGuy) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"ember-data-factory-guy\"eaimeta@70e063a35619d71f\n\n  _emberDataFactoryGuy.default.define('objective', {\n    default: {\n      title: 'First objective',\n      weight: 50\n    }\n  });\n});","define(\"objective-manager-frontend/tests/integration/components/add-button-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-cli-htmlbars\"eaimeta@70e063a35619d71f\n\n  (0, _qunit.module)('Integration | Component | add-button', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <AddButton />\n      */\n      {\n        \"id\": \"QnS8pfNR\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"add-button\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(this.element).hasText(''); // Template block usage:\n\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <AddButton>\n              template block text\n            </AddButton>\n          \n      */\n      {\n        \"id\": \"65t8OnDc\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        template block text\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"add-button\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(this.element).hasText('template block text');\n    });\n  });\n});","define(\"objective-manager-frontend/tests/test-helper\", [\"objective-manager-frontend/app\", \"objective-manager-frontend/config/environment\", \"qunit\", \"@ember/test-helpers\", \"qunit-dom\", \"ember-qunit\"], function (_app, _environment, QUnit, _testHelpers, _qunitDom, _emberQunit) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"objective-manager-frontend/app\",0,\"objective-manager-frontend/config/environment\",0,\"qunit\",0,\"@ember/test-helpers\",0,\"qunit-dom\",0,\"ember-qunit\"eaimeta@70e063a35619d71f\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _qunitDom.setup)(QUnit.assert);\n  (0, _emberQunit.start)();\n});","define(\"objective-manager-frontend/tests/unit/adapters/application-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\"eaimeta@70e063a35619d71f\n\n  (0, _qunit.module)('Unit | Adapter | application', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let adapter = this.owner.lookup('adapter:application');\n      assert.ok(adapter);\n    });\n  });\n});","define(\"objective-manager-frontend/tests/unit/controllers/application-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\"eaimeta@70e063a35619d71f\n\n  (0, _qunit.module)('Unit | Controller | application', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // TODO: Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let controller = this.owner.lookup('controller:application');\n      assert.ok(controller);\n    });\n  });\n});","define(\"objective-manager-frontend/tests/unit/routes/application-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\"eaimeta@70e063a35619d71f\n\n  (0, _qunit.module)('Unit | Route | application', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:application');\n      assert.ok(route);\n    });\n  });\n});","define('objective-manager-frontend/config/environment', [], function() {\n  var prefix = 'objective-manager-frontend';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('objective-manager-frontend/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}